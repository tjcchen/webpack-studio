"use strict";var s=require("fs"),t=require("purgecss"),e=require("webpack-sources"),o=require("path");function n(s){return s&&"object"==typeof s&&"default"in s?s:{default:s}}var r=n(t),i=n(o);function a(s,t){const e=i.default.extname((o=s).includes("?")?o.split("?").slice(0,-1).join(""):o);var o;return t.includes(e)}function c(s,t,e){const o=[];for(const n of Array.from(s.modulesIterable||[])){const s=e(n);s&&t.includes(i.default.extname(s))&&o.push(s)}return o}const u=[".css",".scss",".styl",".sass",".less"];module.exports=class{constructor(s){this.purgedStats={},this.options=s}apply(s){s.hooks.compilation.tap("PurgeCSS",s=>{this.initializePlugin(s)}),s.hooks.done.tap("PurgeCSS",this.onHooksDone.bind(this))}onHooksDone(s){s.hasErrors()?this.options.verbose&&console.warn("purge-webpack-plugin: pausing due to webpack errors"):this.options.rejected&&(s.purged=this.purgedStats)}getAssetsToPurge(s,t){return s.filter(s=>this.options.only?this.options.only.some(t=>s&&s.name.includes(t)):s&&t.includes(s.name))}initializePlugin(t){t.hooks.additionalAssets.tapPromise("PurgeCSS",()=>{const e="function"==typeof this.options.paths?this.options.paths():this.options.paths;return e.forEach(t=>{if(!s.existsSync(t))throw new Error(`Path ${t} does not exist.`)}),this.runPluginHook(t,e)})}async runPluginHook(s,o){const n=function(s={},t){const e=[];for(const[o,n]of Object.entries(s))a(o,t)&&e.push({name:o,asset:n});return e}(s.assets,[".css"]);for(const i of s.chunks){const{files:a}=i,l=this.getAssetsToPurge(n,a);for(const{name:n,asset:a}of l){const l=o.concat(c(i,this.options.moduleExtensions||[],s=>s.resource)).filter(s=>!u.some(t=>s.endsWith(t))),p={...t.defaultOptions,...this.options,content:l,css:[{raw:a.source()}]};"function"==typeof p.safelist&&(p.safelist=p.safelist());const f=(await(new r.default).purge({content:p.content,css:p.css,defaultExtractor:p.defaultExtractor,extractors:p.extractors,fontFace:p.fontFace,keyframes:p.keyframes,output:p.output,rejected:p.rejected,variables:p.variables,safelist:p.safelist}))[0];f.rejected&&(this.purgedStats[n]=f.rejected),s.assets[n]=new e.ConcatSource(f.css)}}}};
